apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
spec:
  ports:
  - port: 80 # expose the service on internal port 80
    protocol: TCP
    targetPort: 8080 # our nodejs app listens on port 8080
  selector:
    app: api
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: mjwrazor/docker-js-stack-api:v0.1.0
        imagePullPolicy: Always
        resources: {}
        stdin: true
        tty: true
        workingDir: /app
        ports:
        - containerPort: 8080
        args:
        - npm
        - run
        - start
        env:
        - name: MYSQL_DB
          value: ctodo
        - name: MYSQL_HOST
          value: db
        - name: MYSQL_PASSWORD
          value: example
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          value: test
        - name: PORT
          value: "8080"
      restartPolicy: Always
      volumes: null
      serviceAccountName: ""
status: {}
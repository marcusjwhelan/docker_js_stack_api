apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: db
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: mysql-1
    app.kubernetes.io/version: "8.0.19"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: backend
  name: db-stateful-set
spec:
  serviceName: "db-service"
  replicas: 1
  selector:
    matchLabels:
      app: db # has to match .spec.template.metadata.labels
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: db # has to match .spec.selector.matchLabels
    spec:
      affinity:
        # prevent replicas of this pod on a single node
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app # key/value has to match .spec.selector.matchLabels
                operator: In
                values:
                - api
              - key: app
                operator: In
                values:
                - client
            topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 15
      containers:
      - image: mysql:8.0.19
        name: db-container
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        args:
        - --default-authentication-plugin=mysql_native_password
        env:
        - name: MYSQL_DATABASE
          value: ctodo
        - name: MYSQL_ROOT_PASSWORD
          value: example
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim